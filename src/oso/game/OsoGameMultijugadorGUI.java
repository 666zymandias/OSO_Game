/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package oso.game;

import java.awt.Font;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import oso.chat.ClienteChatGUI;
import oso.chat.ClienteChatThread;
import oso.core.BotonOso;
import oso.core.Jugada;
import oso.core.Partida;

/**
 *
 * @author felipe
 */
public class OsoGameMultijugadorGUI extends javax.swing.JFrame implements ActionListener {
    
    private BotonOso ultimoBotonOso, botonOsoActual;
    private Partida partidaOso;
    private final List<BotonOso> listaBotonesJugada = new ArrayList<>();

    private final String hostAddr = "127.0.0.1";
    private final int portJuego = 15000;
    private final int portChat = 16000;
    private String user;
    private Socket socketJuego;
    private Socket socketChat;
    private DataInputStream inChat;
    private DataOutputStream outChat;
    private ObjectInputStream inJuego;
    private ObjectOutputStream outJuego;
    private ClienteChatThread leeChat;
    private int filas;
    private int columnas;
    
    
    public OsoGameMultijugadorGUI() {
        initComponents();
        setLocationRelativeTo(null);
        areaChat.setFocusable(false);
        textoMensaje.setFocusable(false);
        textoOsosPropios.setEnabled(false);
        textoOsosRivales.setEnabled(false);
        botonEnviarJugada.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelUsuario = new javax.swing.JLabel();
        textoUsuario = new javax.swing.JTextField();
        botonConectar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaChat = new javax.swing.JTextArea();
        textoMensaje = new javax.swing.JTextField();
        botonEnviarMsg = new javax.swing.JButton();
        panelJuego = new javax.swing.JPanel();
        botonEnviarJugada = new javax.swing.JButton();
        textoOsosPropios = new javax.swing.JTextField();
        textoOsosRivales = new javax.swing.JTextField();
        labelOsosPropios = new javax.swing.JLabel();
        labelOsosRivales = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelUsuario.setFont(new java.awt.Font("Liberation Sans", 0, 16)); // NOI18N
        labelUsuario.setText("Usuario:");

        botonConectar.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N
        botonConectar.setText("Conectar");
        botonConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConectarActionPerformed(evt);
            }
        });

        areaChat.setColumns(20);
        areaChat.setRows(5);
        jScrollPane1.setViewportView(areaChat);

        botonEnviarMsg.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N
        botonEnviarMsg.setText("enviar");
        botonEnviarMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEnviarMsgActionPerformed(evt);
            }
        });

        panelJuego.setMinimumSize(new java.awt.Dimension(390, 390));
        panelJuego.setPreferredSize(new java.awt.Dimension(390, 390));

        javax.swing.GroupLayout panelJuegoLayout = new javax.swing.GroupLayout(panelJuego);
        panelJuego.setLayout(panelJuegoLayout);
        panelJuegoLayout.setHorizontalGroup(
            panelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 390, Short.MAX_VALUE)
        );
        panelJuegoLayout.setVerticalGroup(
            panelJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        botonEnviarJugada.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N
        botonEnviarJugada.setText("enviar");
        botonEnviarJugada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEnviarJugadaActionPerformed(evt);
            }
        });

        textoOsosPropios.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N
        textoOsosPropios.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textoOsosPropios.setText("0");

        textoOsosRivales.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N
        textoOsosRivales.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textoOsosRivales.setText("0");

        labelOsosPropios.setFont(new java.awt.Font("Liberation Sans", 0, 16)); // NOI18N
        labelOsosPropios.setText("Osos propios");

        labelOsosRivales.setFont(new java.awt.Font("Liberation Sans", 0, 16)); // NOI18N
        labelOsosRivales.setText("Osos rivales");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(labelUsuario)
                        .addGap(18, 18, 18)
                        .addComponent(textoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonConectar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(botonEnviarJugada, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(140, 140, 140)
                                        .addComponent(labelOsosRivales))
                                    .addComponent(labelOsosPropios))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textoOsosPropios, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textoOsosRivales, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(panelJuego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(textoMensaje)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonEnviarMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(11, 11, 11))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUsuario)
                    .addComponent(textoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonConectar))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                    .addComponent(panelJuego, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textoMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonEnviarMsg)
                            .addComponent(botonEnviarJugada))
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textoOsosPropios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelOsosPropios))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textoOsosRivales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelOsosRivales))
                        .addContainerGap(12, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConectarActionPerformed
        user = textoUsuario.getText();
        if (! user.equals("")){
            try {
                botonConectar.setEnabled(false);
                socketJuego = new Socket(hostAddr, portJuego);
                socketChat = new Socket(hostAddr, portChat);
                
                inChat = new DataInputStream(socketChat.getInputStream());
                outChat = new DataOutputStream(socketChat.getOutputStream());
                
                /*
                inJuego = new ObjectInputStream(socketJuego.getInputStream());
                outJuego = new ObjectOutputStream(socketJuego.getOutputStream());
                */
                
                leeDimensionesJuego();
                
                leeChat = new ClienteChatThread(inChat, areaChat);
                leeChat.start();
                
                textoUsuario.setEnabled(false);
                botonEnviarJugada.setEnabled(true);
                textoMensaje.setFocusable(true);
                
            } catch (IOException ex) {
                Logger.getLogger(ClienteChatGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
       
    }//GEN-LAST:event_botonConectarActionPerformed

    private void botonEnviarMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEnviarMsgActionPerformed
        String texto = textoMensaje.getText();
        if (! texto.equals("")) {
            textoMensaje.setText("");
            String mensaje = user +" > "+ texto;
            try {
                outChat.writeUTF(mensaje);
                outChat.flush();
            } catch (IOException ex) {
                Logger.getLogger(ClienteChatGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_botonEnviarMsgActionPerformed

    private void botonEnviarJugadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEnviarJugadaActionPerformed
        // TODO add your handling code here:
        if (botonOsoActual != null) {
            int x = botonOsoActual.getFila();
            int y = botonOsoActual.getColumna();
            String letra = botonOsoActual.getText();
            
            botonOsoActual.setLetra(letra);
            listaBotonesJugada.add(botonOsoActual);
            
            Jugada jugada = new Jugada(x, y, letra.charAt(0));
            try {
                outJuego.writeObject(jugada);
            } catch (IOException ex) {
                Logger.getLogger(OsoGameMultijugadorGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_botonEnviarJugadaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OsoGameMultijugadorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OsoGameMultijugadorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OsoGameMultijugadorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OsoGameMultijugadorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OsoGameMultijugadorGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaChat;
    private javax.swing.JButton botonConectar;
    private javax.swing.JButton botonEnviarJugada;
    private javax.swing.JButton botonEnviarMsg;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelOsosPropios;
    private javax.swing.JLabel labelOsosRivales;
    private javax.swing.JLabel labelUsuario;
    private javax.swing.JPanel panelJuego;
    private javax.swing.JTextField textoMensaje;
    private javax.swing.JTextField textoOsosPropios;
    private javax.swing.JTextField textoOsosRivales;
    private javax.swing.JTextField textoUsuario;
    // End of variables declaration//GEN-END:variables

    private void leeDimensionesJuego() {
        DataInputStream din;
        try {
            
            din = new DataInputStream(socketJuego.getInputStream());
            String linea  = din.readUTF();
            filas = linea.charAt(0) - '0';
            columnas = linea.charAt(3) - '0';
            System.out.println(filas + ", "+columnas);
            
            panelJuego.setLayout(new GridLayout(filas, columnas));
           
            
            int sizeLetra = 0;
            if (filas * columnas < 81) {
                sizeLetra = 30;
            } else {
                sizeLetra = 15;
            }
            for (int i = 0; i < filas; i++) {
                for (int j = 0; j < columnas; j++) {
                    BotonOso botonOso = new BotonOso(i, j);
                    botonOso.setFont(new Font("Arial", Font.PLAIN, sizeLetra));
                    botonOso.addActionListener(this);
                    panelJuego.add(botonOso);
                }
            }

            panelJuego.revalidate();
            
        } catch (IOException ex) {
            Logger.getLogger(OsoGameMultijugadorGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
        
    @Override
    public void actionPerformed(ActionEvent ae) {

        ultimoBotonOso = botonOsoActual;
        botonOsoActual = (BotonOso) ae.getSource();
        if (ultimoBotonOso != null && ultimoBotonOso != botonOsoActual) {
            ultimoBotonOso.setText("");
        }
        if (botonOsoActual.getText().equals("") || botonOsoActual.getText().equals("S")) {
            botonOsoActual.setText("O");
        } else if (botonOsoActual.getText().equals("O")) {
            botonOsoActual.setText("S");
        }
    }
    
}
